{"version":3,"sources":["components/RegistrationFlow/RegistrationFlow.module.css","components/NavBar/index.tsx","zk/zkLib.tsx","generated/factories/SemaphoreCore__factory.ts","generated/factories/Pairing__factory.ts","generated/factories/Verifier__factory.ts","generated/factories/ERC721__factory.ts","generated/factories/PoseidonT3__factory.ts","generated/factories/PoseidonT6__factory.ts","generated/factories/YourNFT__factory.ts","generated/factories/ZKVote__factory.ts","hooks/useEventListener.ts","components/VoteResults/index.tsx","components/VotingCard/index.tsx","components/Proposal/index.tsx","components/CreateProposalModal/index.tsx","components/RegistrationFlow/index.tsx","hooks/useReadNFTData.ts","pages/GroupPage/index.tsx","hooks/useReadNFTBalance.ts","components/RegisterGroupModal/index.tsx","pages/HomePage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","NavBar","data","useAccount","connect","useConnect","connector","InjectedConnector","activeChain","switchNetwork","useNetwork","disconnect","useDisconnect","Navbar","bg","variant","expand","Container","Brand","href","style","display","Row","Button","onClick","address","substring","length","id","getNullHashAndProofForMessage","async","message","externalNullifier","identityCommitment","identityCommitments","identity","merkleProof","generateMerkleProof","BigInt","witness","Semaphore","genWitness","getTrapdoor","getNullifier","fullProof","genProof","process","solidityProof","packToSolidityProof","proof","nullifierHash","genNullifierHash","root","createExternalNullifier","clubId","messageType","flex","ethers","utils","keccak256","solidityPack","broadcastMessage","contract","messageBytes","token","flexField","_abi","anonymous","inputs","indexed","internalType","name","type","_bytecode","SemaphoreCore__factory","ContractFactory","constructor","args","super","contractName","this","deploy","overrides","getDeployTransaction","attach","signer","Interface","signerOrProvider","Contract","bytecode","abi","Pairing__factory","outputs","stateMutability","Verifier__factory","ERC721__factory","name_","symbol_","PoseidonT3__factory","PoseidonT6__factory","YourNFT__factory","ZKVote__factory","xs","Array","isArray","linkLibraryAddresses","linkBytecode","linkedBytecode","replace","RegExp","toLowerCase","_verifier","queryKey","namespace","key","contractKey","provider","providerOrSigner","Provider","network","chainId","connection","url","signerStr","_isSigner","providerKey","interface","fragments","map","m","reduce","oldValue","current","newValue","useEventListener","eventFilter","startBlock","toBlock","undefined","keys","refetch","status","useQuery","result","queryFilter","useEffect","listener","on","off","e","console","log","Results","props","votesYes","votesNo","votesAbstain","sum","float","toFixed","ProgressBar","now","Voter","setProof","useState","useProvider","account","generating","setGenerating","err","setErr","zkVoteContract","useContract","addressOrName","contractInterface","members","isMember","filter","member","useSigner","handleGenerate","createVoteProof","vote","error","toString","Card","Title","ButtonGroup","className","wordBreak","Body","submitVoteProof","Spinner","animation","Alert","onClose","dismissible","Proposal","groupId","useParams","messagesBroadcasted","registrations","allIdentityCommitments","register","votes","BigNumber","from","eq","proposalId","parseBytes32String","paddingTop","Header","components","code","node","inline","children","match","exec","String","gruvboxDark","language","PreTag","Footer","clubs","formatBytes32String","signMessage","ZkIdentity","Strategy","MESSAGE","genIdentityCommitment","CreateProposalModal","show","setShow","setMessage","isGenerating","handleClose","isConnected","hasMinted","isExampleNFT","mint","Modal","onHide","closeButton","Form","Group","controlId","Label","Control","placeholder","autoFocus","as","value","onChange","val","target","Dialog","Col","Text","submitProof","createProposal","RegistrationFlow","step","setStep","state","useStep","fluid","primaryBtnClass","classes","hide","secondaryBtnClass","startingStep","onSubmit","steps","label","content","useReadNFTData","nftContract","setName","symbol","setSymbol","getSymbol","getName","GroupPage","registerErr","setRegErr","navigate","useNavigate","dynamicContract","balanceOfUser","balance","setBalance","getBalance","balanceOf","listenForUpdates","useReadBalance","proposalsForGroup","identityCommitmentsOnChain","gt","fallback","proposalMessage","window","Math","round","getBlockNumber","div","addy","tokenId","tokenOfOwnerByIndex","registerIdentity","mintItem","i","RegisterModal","setAddress","signedIn","createGroup","HomePage","createClub","alert","ListGroup","creationTx","GroupCard","ListGroupItem","action","Badge","queryClient","QueryClient","client","createClient","autoConnect","connectors","MetaMaskConnector","options","shimDisconnect","config","providers","StaticJsonRpcProvider","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.6ee876fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"RegistrationFlow_hide__sIqyD\"};","import { Navbar, Container, Button, Row } from \"react-bootstrap\";\nimport { useAccount, useConnect, useDisconnect } from \"wagmi\";\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nimport { useNetwork } from \"wagmi\";\n\nexport const NavBar = () => {\n  const { data } = useAccount();\n  const { connect } = useConnect({\n    connector: new InjectedConnector(),\n  });\n  const { activeChain, switchNetwork } = useNetwork();\n  const { disconnect } = useDisconnect();\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand>\n      <Container>\n        <Navbar.Brand href=\"/zk-vote\">ZK Private Voting Demo</Navbar.Brand>\n        {data ? (\n          <div style={{ display: \"inline\" }}>\n            <Row>\n              <Button onClick={() => disconnect()}>\n                Logout{\" \"}\n                {data.address?.substring(0, 5) +\n                  \"...\" +\n                  data.address?.substring(\n                    data.address.length - 2,\n                    data.address.length\n                  )}\n              </Button>\n            </Row>\n            <Row>\n              {activeChain && activeChain!.id === 4 ? (\n                \"\"\n              ) : (\n                <Button onClick={() => switchNetwork!(4)} variant=\"danger\">\n                  Wrong chain - Switch to Rinky\n                </Button>\n              )}\n            </Row>\n          </div>\n        ) : (\n          <Button onClick={() => connect()}>Connect</Button>\n        )}\n      </Container>\n    </Navbar>\n  );\n};\n","import { ZkIdentity } from \"@zk-kit/identity\";\nimport { StrBigInt, generateMerkleProof, Semaphore } from \"@zk-kit/protocols\";\nimport { BigNumber, ethers, BigNumberish, Contract } from \"ethers\";\nimport { solidityPack } from \"ethers/lib/utils\";\nconst wasmFilePath = process.env.PUBLIC_URL + \"/static/semaphore.wasm\";\nconst finalZkeyPath = process.env.PUBLIC_URL + \"/static/semaphore_final.zkey\";\nexport const getNullHashAndProofForMessage = async (\n  message: string,\n  externalNullifier: StrBigInt,\n  identityCommitment: StrBigInt,\n  identityCommitments: StrBigInt[],\n  identity: ZkIdentity,\n) => {\n  const merkleProof = generateMerkleProof(\n    20,\n    BigInt(0),\n    identityCommitments,\n    identityCommitment\n  );\n  const witness = Semaphore.genWitness(\n    identity.getTrapdoor(),\n    identity.getNullifier(),\n    merkleProof,\n    externalNullifier,\n    message\n  );\n\n  const fullProof = await Semaphore.genProof(\n    witness,\n    wasmFilePath,\n    finalZkeyPath\n  );\n  const solidityProof = Semaphore.packToSolidityProof(fullProof.proof);\n  const nullifierHash = Semaphore.genNullifierHash(\n    externalNullifier,\n    identity.getNullifier()\n  );\n  return {\n    nullifierHash,\n    solidityProof,\n    root: merkleProof.root,\n  };\n};\n\nexport const createExternalNullifier = (\n  clubId: BigNumber,\n  messageType: BigNumber,\n  flex: BigNumber\n) => {\n  const externalNullifier =\n    BigInt(\n      ethers.utils.keccak256(\n        solidityPack([\"uint\", \"uint8\", \"uint\"], [clubId, messageType, flex])\n      )\n    ) >> BigInt(8);\n  return externalNullifier;\n};\n\n// actually should be public things\nexport interface Proof {\n  messageBytes: string;\n  token: string;\n  nullifierHash: BigNumberish;\n  root: BigNumber;\n  externalNullifier: BigNumberish;\n  clubId: BigNumber;\n  messageType: BigNumber;\n  flexField: BigNumberish;\n  proof: BigNumberish[];\n}\nexport const broadcastMessage = (contract: Contract, proof: Proof) => {\n  return contract.broadcastMessage(\n    proof.messageBytes,\n    proof.token,\n    proof.nullifierHash,\n    proof.root,\n    proof.externalNullifier,\n    proof.clubId,\n    proof.messageType,\n    proof.flexField,\n    proof.proof\n  );\n};\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { SemaphoreCore, SemaphoreCoreInterface } from \"../SemaphoreCore\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"nullifierHash\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"NullifierHashAdded\",\n    type: \"event\",\n  },\n];\n\nconst _bytecode =\n  \"0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220bf6dc927a1b02f72fed055682e950605ae48fe133dba00c3c406b00e74110ff164736f6c634300080a0033\";\n\ntype SemaphoreCoreConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: SemaphoreCoreConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class SemaphoreCore__factory extends ContractFactory {\n  constructor(...args: SemaphoreCoreConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"SemaphoreCore\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<SemaphoreCore> {\n    return super.deploy(overrides || {}) as Promise<SemaphoreCore>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): SemaphoreCore {\n    return super.attach(address) as SemaphoreCore;\n  }\n  connect(signer: Signer): SemaphoreCore__factory {\n    return super.connect(signer) as SemaphoreCore__factory;\n  }\n  static readonly contractName: \"SemaphoreCore\";\n  public readonly contractName: \"SemaphoreCore\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): SemaphoreCoreInterface {\n    return new utils.Interface(_abi) as SemaphoreCoreInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): SemaphoreCore {\n    return new Contract(address, _abi, signerOrProvider) as SemaphoreCore;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Pairing, PairingInterface } from \"../Pairing\";\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"InvalidProof\",\n    type: \"error\",\n  },\n];\n\nconst _bytecode =\n  \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201769218ba9f532995276ef14ce048f4bf5f86582b55513eb6323ddbe410a045464736f6c634300080a0033\";\n\ntype PairingConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: PairingConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class Pairing__factory extends ContractFactory {\n  constructor(...args: PairingConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"Pairing\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Pairing> {\n    return super.deploy(overrides || {}) as Promise<Pairing>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): Pairing {\n    return super.attach(address) as Pairing;\n  }\n  connect(signer: Signer): Pairing__factory {\n    return super.connect(signer) as Pairing__factory;\n  }\n  static readonly contractName: \"Pairing\";\n  public readonly contractName: \"Pairing\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): PairingInterface {\n    return new utils.Interface(_abi) as PairingInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Pairing {\n    return new Contract(address, _abi, signerOrProvider) as Pairing;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Verifier, VerifierInterface } from \"../Verifier\";\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"InvalidProof\",\n    type: \"error\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256[2]\",\n        name: \"a\",\n        type: \"uint256[2]\",\n      },\n      {\n        internalType: \"uint256[2][2]\",\n        name: \"b\",\n        type: \"uint256[2][2]\",\n      },\n      {\n        internalType: \"uint256[2]\",\n        name: \"c\",\n        type: \"uint256[2]\",\n      },\n      {\n        internalType: \"uint256[4]\",\n        name: \"input\",\n        type: \"uint256[4]\",\n      },\n    ],\n    name: \"verifyProof\",\n    outputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50611174806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635fe8c13b14610030575b600080fd5b61004361003e366004610fcb565b610045565b005b61004d610ddf565b6040805180820182528651815260208088015181830152908352815160808101835286515181840190815287518301516060830152815282518084018452878301805151825251830151818401528183015283820152815180830183528551815285820151918101919091529082015260006100c76103c0565b6080810151519091506100dc600460016110d5565b146100fa576040516309bde33960e01b815260040160405180910390fd5b60008160800151600081518110610113576101136110a9565b6020026020010151905061016581610160846080015160018151811061013b5761013b6110a9565b602002602001015187600060048110610156576101566110a9565b60200201516108c0565b610969565b90506101a0816101608460800151600281518110610185576101856110a9565b602002602001015187600160048110610156576101566110a9565b90506101db8161016084608001516003815181106101c0576101c06110a9565b602002602001015187600260048110610156576101566110a9565b90506102168161016084608001516004815181106101fb576101fb6110a9565b602002602001015187600360048110610156576101566110a9565b60408051600480825260a0820190925291925060009190816020015b604080518082019091526000808252602082015281526020019060019003908161023257505060408051600480825260a0820190925291925060009190602082015b61027c610e30565b815260200190600190039081610274575050855190915061029c906109d5565b826000815181106102af576102af6110a9565b60200260200101819052508460200151816000815181106102d2576102d26110a9565b60200260200101819052508360000151826001815181106102f5576102f56110a9565b6020026020010181905250836020015181600181518110610318576103186110a9565b60200260200101819052508282600281518110610337576103376110a9565b602002602001018190525083604001518160028151811061035a5761035a6110a9565b602002602001018190525084604001518260038151811061037d5761037d6110a9565b60200260200101819052508360600151816003815181106103a0576103a06110a9565b60200260200101819052506103b58282610ad7565b505050505050505050565b6103c8610e50565b6040805180820182527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e281527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19266020808301919091529083528151608080820184527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c8285019081527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab606080850191909152908352845180860186527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a781527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8818601528385015285840192909252835180820185527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28186019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed828501528152845180860186527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa818601528185015285850152835190810184527f1bdb443ce61ebcf93daed4215a57e1cec90ca64973023e31197a112e8cee72f68185019081527f117e26c4235f42625b3404f2973059814ff260dba7176d7aae910f493a8e1fb5828401528152835180850185527f196e247a12f580e36894f256f0c122393489b4c213b3e913250feee806ca45ff81527f2fedff4e4bbcbf9f1c56e28a060d50eef5f54e2aab897f6b465acd2ed005ae918185015281840152908401528151600580825260c08201909352919082015b604080518082019091526000808252602082015281526020019060019003908161064357505060808201908152604080518082019091527f2c097b31a897227a6f64c9fc31d9a8fc421b0d8b8207f92532b464e431e61db881527f0fcf6d89d77d5123a43dfb23efb9c929c28c148ca82c794057864b8e66903c546020820152905180516000906106d6576106d66110a9565b602002602001018190525060405180604001604052807f0186dae5999acfe2cda6fa7a157ae726afda7c6f57b00ea0aa6c2c23bf83838881526020017f2f078608f710c45b60d23716c58e106d8c7a1c6db28119defffc413e074f8716815250816080015160018151811061074d5761074d6110a9565b602002602001018190525060405180604001604052807f2464c1784bda2cbfb51e5ab87cf7eb2764ad81f7038152bdbbb07d404b49aa3781526020017f0638b273e4ee33e03e42ca6c7de1ea7043dbdcaa48661864de644d91c6b4821f81525081608001516002815181106107c4576107c46110a9565b602002602001018190525060405180604001604052807f098ce8b5289ef791db34b68b9e0043ab7bf25306d83a9f0ce74396b8a69c57bb81526020017f1ec6f7a81748f3d2c2b87610d747ca72045ac1530e226f00710630d41aad7e26815250816080015160038151811061083b5761083b6110a9565b602002602001018190525060405180604001604052807f07dbf682cc528d3ff763fa576d05db50e023921728119ef66f880b6adae01cbe81526020017f0d287dcd9318207576eaa871e7b3308f613d9df7865059cdbc9f66fdef342dc681525081608001516004815181106108b2576108b26110a9565b602002602001018190525090565b60408051808201909152600080825260208201527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210610914576040516309bde33960e01b815260040160405180910390fd5b61091c610ea1565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080610961576040516309bde33960e01b815260040160405180910390fd5b505092915050565b6040805180820190915260008082526020820152610985610ebf565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080610961576040516309bde33960e01b815260040160405180910390fd5b604080518082019091526000808252602082015281511580156109fa57506020820151155b15610a18575050604080518082019091526000808252602082015290565b81517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47111580610a6c57507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47826020015110155b15610a8a576040516309bde33960e01b815260040160405180910390fd5b60405180604001604052808360000151815260200183602001517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610acf91906110ed565b905292915050565b8051825114610af9576040516309bde33960e01b815260040160405180910390fd5b81516000610b08826006611104565b905060008167ffffffffffffffff811115610b2557610b25610f19565b604051908082528060200260200182016040528015610b4e578160200160208202803683370190505b50905060005b83811015610d8957858181518110610b6e57610b6e6110a9565b60200260200101516000015182826006610b889190611104565b610b939060006110d5565b81518110610ba357610ba36110a9565b602002602001018181525050858181518110610bc157610bc16110a9565b60200260200101516020015182826006610bdb9190611104565b610be69060016110d5565b81518110610bf657610bf66110a9565b602002602001018181525050848181518110610c1457610c146110a9565b6020908102919091010151515182610c2d836006611104565b610c389060026110d5565b81518110610c4857610c486110a9565b602002602001018181525050848181518110610c6657610c666110a9565b60209081029190910181015151015182610c81836006611104565b610c8c9060036110d5565b81518110610c9c57610c9c6110a9565b602002602001018181525050848181518110610cba57610cba6110a9565b602002602001015160200151600060028110610cd857610cd86110a9565b602002015182610ce9836006611104565b610cf49060046110d5565b81518110610d0457610d046110a9565b602002602001018181525050848181518110610d2257610d226110a9565b602002602001015160200151600160028110610d4057610d406110a9565b602002015182610d51836006611104565b610d5c9060056110d5565b81518110610d6c57610d6c6110a9565b602090810291909101015280610d8181611123565b915050610b54565b50610d92610edd565b6000602082602086026020860160086107d05a03fa9050801580610db857508151600114155b15610dd6576040516309bde33960e01b815260040160405180910390fd5b50505050505050565b6040805160a081019091526000606082018181526080830191909152815260208101610e09610e30565b8152602001610e2b604051806040016040528060008152602001600081525090565b905290565b6040518060400160405280610e43610efb565b8152602001610e2b610efb565b6040805160e08101909152600060a0820181815260c0830191909152815260208101610e7a610e30565b8152602001610e87610e30565b8152602001610e94610e30565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610f5257610f52610f19565b60405290565b6040516080810167ffffffffffffffff81118282101715610f5257610f52610f19565b600082601f830112610f8c57600080fd5b610f94610f2f565b806040840185811115610fa657600080fd5b845b81811015610fc0578035845260209384019301610fa8565b509095945050505050565b600080600080610180808688031215610fe357600080fd5b610fed8787610f7b565b9450604087605f88011261100057600080fd5b611008610f2f565b8060c089018a81111561101a57600080fd5b838a015b8181101561103f576110308c82610f7b565b8452602090930192840161101e565b5081975061104d8b82610f7b565b9650505050508661011f87011261106357600080fd5b61106b610f58565b90860190808883111561107d57600080fd5b61010088015b8381101561109b578035835260209283019201611083565b509598949750929550505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156110e8576110e86110bf565b500190565b6000828210156110ff576110ff6110bf565b500390565b600081600019048311821515161561111e5761111e6110bf565b500290565b6000600019821415611137576111376110bf565b506001019056fea26469706673582212202fe5396a755f9f7f44f2d1594a6e787db2c707af2194ec898d0bb82e84c3bb2b64736f6c634300080a0033\";\n\ntype VerifierConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: VerifierConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class Verifier__factory extends ContractFactory {\n  constructor(...args: VerifierConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"Verifier\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Verifier> {\n    return super.deploy(overrides || {}) as Promise<Verifier>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): Verifier {\n    return super.attach(address) as Verifier;\n  }\n  connect(signer: Signer): Verifier__factory {\n    return super.connect(signer) as Verifier__factory;\n  }\n  static readonly contractName: \"Verifier\";\n  public readonly contractName: \"Verifier\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): VerifierInterface {\n    return new utils.Interface(_abi) as VerifierInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Verifier {\n    return new Contract(address, _abi, signerOrProvider) as Verifier;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { ERC721, ERC721Interface } from \"../ERC721\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name_\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol_\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051620014dd380380620014dd8339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61124b80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d5c565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd1565b61012461011f366004610de4565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e19565b6103a6565b005b61014f61015f366004610e43565b6104bc565b61014f610172366004610e43565b6104ed565b610124610185366004610de4565b610508565b61019d610198366004610e7f565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610e9a565b610615565b61014f6101d4366004610eec565b610624565b6101046101e7366004610de4565b61065c565b6100e76101fa366004610fc8565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610ffb565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610ffb565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b78383610744565b505050565b6104c633826107b2565b6104e25760405162461bcd60e51b815260040161038190611036565b6104b78383836108a9565b6104b783838360405180602001604052806000815250610624565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610ffb565b610620338383610a45565b5050565b61062e33836107b2565b61064a5760405162461bcd60e51b815260040161038190611036565b61065684848484610b14565b50505050565b6000818152600260205260409020546060906001600160a01b03166106db5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f260408051602081019091526000815290565b90506000815111610712576040518060200160405280600081525061073d565b8061071c84610b47565b60405160200161072d929190611087565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077982610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083683610508565b9050806001600160a01b0316846001600160a01b0316148061087d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108a15750836001600160a01b03166108968461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166108bc82610508565b6001600160a01b0316146109205760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109825760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098d600082610744565b6001600160a01b03831660009081526003602052604081208054600192906109b69084906110cc565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e49084906110e3565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610aa75760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1f8484846108a9565b610b2b84848484610c45565b6106565760405162461bcd60e51b8152600401610381906110fb565b606081610b6b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b955780610b7f8161114d565b9150610b8e9050600a8361117e565b9150610b6f565b60008167ffffffffffffffff811115610bb057610bb0610ed6565b6040519080825280601f01601f191660200182016040528015610bda576020820181803683370190505b5090505b84156108a157610bef6001836110cc565b9150610bfc600a86611192565b610c079060306110e3565b60f81b818381518110610c1c57610c1c6111a6565b60200101906001600160f81b031916908160001a905350610c3e600a8661117e565b9450610bde565b60006001600160a01b0384163b15610d3857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c899033908990889088906004016111bc565b6020604051808303816000875af1925050508015610cc4575060408051601f3d908101601f19168201909252610cc1918101906111f8565b60015b610d1e573d808015610cf2576040519150601f19603f3d011682016040523d82523d6000602084013e610cf7565b606091505b508051610d165760405162461bcd60e51b8152600401610381906110fb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a1565b506001949350505050565b6001600160e01b031981168114610d5957600080fd5b50565b600060208284031215610d6e57600080fd5b813561073d81610d43565b60005b83811015610d94578181015183820152602001610d7c565b838111156106565750506000910152565b60008151808452610dbd816020860160208601610d79565b601f01601f19169290920160200192915050565b60208152600061073d6020830184610da5565b600060208284031215610df657600080fd5b5035919050565b80356001600160a01b0381168114610e1457600080fd5b919050565b60008060408385031215610e2c57600080fd5b610e3583610dfd565b946020939093013593505050565b600080600060608486031215610e5857600080fd5b610e6184610dfd565b9250610e6f60208501610dfd565b9150604084013590509250925092565b600060208284031215610e9157600080fd5b61073d82610dfd565b60008060408385031215610ead57600080fd5b610eb683610dfd565b915060208301358015158114610ecb57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0257600080fd5b610f0b85610dfd565b9350610f1960208601610dfd565b925060408501359150606085013567ffffffffffffffff80821115610f3d57600080fd5b818701915087601f830112610f5157600080fd5b813581811115610f6357610f63610ed6565b604051601f8201601f19908116603f01168101908382118183101715610f8b57610f8b610ed6565b816040528281528a6020848701011115610fa457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdb57600080fd5b610fe483610dfd565b9150610ff260208401610dfd565b90509250929050565b600181811c9082168061100f57607f821691505b6020821081141561103057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611099818460208801610d79565b8351908301906110ad818360208801610d79565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110de576110de6110b6565b500390565b600082198211156110f6576110f66110b6565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415611161576111616110b6565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118d5761118d611168565b500490565b6000826111a1576111a1611168565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b038087168352808616602084015250836040830152608060608301526111ee6080830184610da5565b9695505050505050565b60006020828403121561120a57600080fd5b815161073d81610d4356fea26469706673582212203f65a74deb2d4ed5687d9d5344d7f65ba424b5aeab186fbdf4f0d073caffec8c64736f6c634300080a0033\";\n\ntype ERC721ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: ERC721ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class ERC721__factory extends ContractFactory {\n  constructor(...args: ERC721ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"ERC721\";\n  }\n\n  deploy(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ERC721> {\n    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;\n  }\n  getDeployTransaction(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(name_, symbol_, overrides || {});\n  }\n  attach(address: string): ERC721 {\n    return super.attach(address) as ERC721;\n  }\n  connect(signer: Signer): ERC721__factory {\n    return super.connect(signer) as ERC721__factory;\n  }\n  static readonly contractName: \"ERC721\";\n  public readonly contractName: \"ERC721\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ERC721Interface {\n    return new utils.Interface(_abi) as ERC721Interface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {\n    return new Contract(address, _abi, signerOrProvider) as ERC721;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { PoseidonT3, PoseidonT3Interface } from \"../PoseidonT3\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256[2]\",\n        name: \"\",\n        type: \"uint256[2]\",\n      },\n    ],\n    name: \"poseidon\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x61011961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806329a5f2f6146038575b600080fd5b60496043366004605b565b50600090565b60405190815260200160405180910390f35b600060408284031215606c57600080fd5b82601f830112607a57600080fd5b6040516040810181811067ffffffffffffffff8211171560aa57634e487b7160e01b600052604160045260246000fd5b806040525080604084018581111560c057600080fd5b845b8181101560d857803583526020928301920160c2565b50919594505050505056fea264697066735822122056469e201c237c094baa52f09d685475d78c42dc2c6f24c4589b6f02a70db71164736f6c634300080a0033\";\n\ntype PoseidonT3ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: PoseidonT3ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class PoseidonT3__factory extends ContractFactory {\n  constructor(...args: PoseidonT3ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"PoseidonT3\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<PoseidonT3> {\n    return super.deploy(overrides || {}) as Promise<PoseidonT3>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): PoseidonT3 {\n    return super.attach(address) as PoseidonT3;\n  }\n  connect(signer: Signer): PoseidonT3__factory {\n    return super.connect(signer) as PoseidonT3__factory;\n  }\n  static readonly contractName: \"PoseidonT3\";\n  public readonly contractName: \"PoseidonT3\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): PoseidonT3Interface {\n    return new utils.Interface(_abi) as PoseidonT3Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): PoseidonT3 {\n    return new Contract(address, _abi, signerOrProvider) as PoseidonT3;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { PoseidonT6, PoseidonT6Interface } from \"../PoseidonT6\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256[5]\",\n        name: \"\",\n        type: \"uint256[5]\",\n      },\n    ],\n    name: \"poseidon\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x61011761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80634937a258146038575b600080fd5b60496043366004605b565b50600090565b60405190815260200160405180910390f35b600060a08284031215606c57600080fd5b82601f830112607a57600080fd5b60405160a0810181811067ffffffffffffffff8211171560aa57634e487b7160e01b600052604160045260246000fd5b6040528060a084018581111560be57600080fd5b845b8181101560d657803583526020928301920160c0565b50919594505050505056fea26469706673582212208b668b6813adf4b0f3a331f72f5f438d695405f20831b9464b4686a1b6d8bec464736f6c634300080a0033\";\n\ntype PoseidonT6ConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: PoseidonT6ConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class PoseidonT6__factory extends ContractFactory {\n  constructor(...args: PoseidonT6ConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"PoseidonT6\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<PoseidonT6> {\n    return super.deploy(overrides || {}) as Promise<PoseidonT6>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): PoseidonT6 {\n    return super.attach(address) as PoseidonT6;\n  }\n  connect(signer: Signer): PoseidonT6__factory {\n    return super.connect(signer) as PoseidonT6__factory;\n  }\n  static readonly contractName: \"PoseidonT6\";\n  public readonly contractName: \"PoseidonT6\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): PoseidonT6Interface {\n    return new utils.Interface(_abi) as PoseidonT6Interface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): PoseidonT6 {\n    return new Contract(address, _abi, signerOrProvider) as PoseidonT6;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { YourNFT, YourNFTInterface } from \"../YourNFT\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"minter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Mint\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n    ],\n    name: \"mintItem\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b506040805180820182526007815266165bdd5c93919560ca1b6020808301918252835180850190945260048452631653919560e21b9084015281519192916200005d91600091620000ec565b50805162000073906001906020840190620000ec565b505050620000906200008a6200009660201b60201c565b6200009a565b620001cf565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000fa9062000192565b90600052602060002090601f0160209004810192826200011e576000855562000169565b82601f106200013957805160ff191683800117855562000169565b8280016001018555821562000169579182015b82811115620001695782518255916020019190600101906200014c565b50620001779291506200017b565b5090565b5b808211156200017757600081556001016200017c565b600181811c90821680620001a757607f821691505b60208210811415620001c957634e487b7160e01b600052602260045260246000fd5b50919050565b611a3c80620001df6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063691c65d4116100ad578063a22cb46511610071578063a22cb46514610266578063b88d4fde14610279578063c87b56dd1461028c578063e985e9c51461029f578063f2fde38b146102db57600080fd5b8063691c65d41461021f57806370a0823114610232578063715018a6146102455780638da5cb5b1461024d57806395d89b411461025e57600080fd5b806323b872dd116100f457806323b872dd146101c05780632f745c59146101d357806342842e0e146101e65780634f6ccce7146101f95780636352211e1461020c57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806318160ddd146101ae575b600080fd5b61014461013f366004611537565b6102ee565b60405190151581526020015b60405180910390f35b6101616102ff565b60405161015091906115ac565b61018161017c3660046115bf565b610391565b6040516001600160a01b039091168152602001610150565b6101ac6101a73660046115f4565b61042b565b005b6008545b604051908152602001610150565b6101ac6101ce36600461161e565b610541565b6101b26101e13660046115f4565b610572565b6101ac6101f436600461161e565b610608565b6101b26102073660046115bf565b610623565b61018161021a3660046115bf565b6106b6565b6101b261022d36600461165a565b61072d565b6101b261024036600461165a565b61079c565b6101ac610823565b600a546001600160a01b0316610181565b610161610889565b6101ac610274366004611675565b610898565b6101ac6102873660046116c7565b6108a7565b61016161029a3660046115bf565b6108df565b6101446102ad3660046117a3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102e936600461165a565b6109e4565b60006102f982610aaf565b92915050565b60606000805461030e906117d6565b80601f016020809104026020016040519081016040528092919081815260200182805461033a906117d6565b80156103875780601f1061035c57610100808354040283529160200191610387565b820191906000526020600020905b81548152906001019060200180831161036a57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661040f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610436826106b6565b9050806001600160a01b0316836001600160a01b031614156104a45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610406565b336001600160a01b03821614806104c057506104c081336102ad565b6105325760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610406565b61053c8383610ad4565b505050565b61054b3382610b42565b6105675760405162461bcd60e51b815260040161040690611811565b61053c838383610c39565b600061057d8361079c565b82106105df5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610406565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61053c838383604051806020016040528060008152506108a7565b600061062e60085490565b82106106915760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610406565b600882815481106106a4576106a4611862565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102f95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610406565b600061073d600b80546001019055565b6000610748600b5490565b90506107548382610de0565b604080516001600160a01b0385168152602081018390527f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885910160405180910390a192915050565b60006001600160a01b0382166108075760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610406565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b0316331461087d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610406565b6108876000610f2e565b565b60606001805461030e906117d6565b6108a3338383610f80565b5050565b6108b13383610b42565b6108cd5760405162461bcd60e51b815260040161040690611811565b6108d98484848461104f565b50505050565b6000818152600260205260409020546060906001600160a01b031661095e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610406565b600061099260408051808201909152601581527468747470733a2f2f697066732e696f2f697066732f60581b602082015290565b905060008151116109b257604051806020016040528060008152506109dd565b806109bc84611082565b6040516020016109cd929190611878565b6040516020818303038152906040525b9392505050565b600a546001600160a01b03163314610a3e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610406565b6001600160a01b038116610aa35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610406565b610aac81610f2e565b50565b60006001600160e01b0319821663780e9d6360e01b14806102f957506102f982611180565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b09826106b6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610bbb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610406565b6000610bc6836106b6565b9050806001600160a01b0316846001600160a01b03161480610c0d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610c315750836001600160a01b0316610c2684610391565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c4c826106b6565b6001600160a01b031614610cb05760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610406565b6001600160a01b038216610d125760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610406565b610d1d8383836111d0565b610d28600082610ad4565b6001600160a01b0383166000908152600360205260408120805460019290610d519084906118bd565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d7f9084906118d4565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610e365760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610406565b6000818152600260205260409020546001600160a01b031615610e9b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610406565b610ea7600083836111d0565b6001600160a01b0382166000908152600360205260408120805460019290610ed09084906118d4565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610fe25760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610406565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61105a848484610c39565b611066848484846111db565b6108d95760405162461bcd60e51b8152600401610406906118ec565b6060816110a65750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110d057806110ba8161193e565b91506110c99050600a8361196f565b91506110aa565b60008167ffffffffffffffff8111156110eb576110eb6116b1565b6040519080825280601f01601f191660200182016040528015611115576020820181803683370190505b5090505b8415610c315761112a6001836118bd565b9150611137600a86611983565b6111429060306118d4565b60f81b81838151811061115757611157611862565b60200101906001600160f81b031916908160001a905350611179600a8661196f565b9450611119565b60006001600160e01b031982166380ac58cd60e01b14806111b157506001600160e01b03198216635b5e139f60e01b145b806102f957506301ffc9a760e01b6001600160e01b03198316146102f9565b61053c8383836112d9565b60006001600160a01b0384163b156112ce57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061121f903390899088908890600401611997565b6020604051808303816000875af192505050801561125a575060408051601f3d908101601f19168201909252611257918101906119d3565b60015b6112b4573d808015611288576040519150601f19603f3d011682016040523d82523d6000602084013e61128d565b606091505b5080516112ac5760405162461bcd60e51b8152600401610406906118ec565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c31565b506001949350505050565b6001600160a01b0383166113345761132f81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611357565b816001600160a01b0316836001600160a01b031614611357576113578382611391565b6001600160a01b03821661136e5761053c8161142e565b826001600160a01b0316826001600160a01b03161461053c5761053c82826114dd565b6000600161139e8461079c565b6113a891906118bd565b6000838152600760205260409020549091508082146113fb576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611440906001906118bd565b6000838152600960205260408120546008805493945090928490811061146857611468611862565b90600052602060002001549050806008838154811061148957611489611862565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806114c1576114c16119f0565b6001900381819060005260206000200160009055905550505050565b60006114e88361079c565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b031981168114610aac57600080fd5b60006020828403121561154957600080fd5b81356109dd81611521565b60005b8381101561156f578181015183820152602001611557565b838111156108d95750506000910152565b60008151808452611598816020860160208601611554565b601f01601f19169290920160200192915050565b6020815260006109dd6020830184611580565b6000602082840312156115d157600080fd5b5035919050565b80356001600160a01b03811681146115ef57600080fd5b919050565b6000806040838503121561160757600080fd5b611610836115d8565b946020939093013593505050565b60008060006060848603121561163357600080fd5b61163c846115d8565b925061164a602085016115d8565b9150604084013590509250925092565b60006020828403121561166c57600080fd5b6109dd826115d8565b6000806040838503121561168857600080fd5b611691836115d8565b9150602083013580151581146116a657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156116dd57600080fd5b6116e6856115d8565b93506116f4602086016115d8565b925060408501359150606085013567ffffffffffffffff8082111561171857600080fd5b818701915087601f83011261172c57600080fd5b81358181111561173e5761173e6116b1565b604051601f8201601f19908116603f01168101908382118183101715611766576117666116b1565b816040528281528a602084870101111561177f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156117b657600080fd5b6117bf836115d8565b91506117cd602084016115d8565b90509250929050565b600181811c908216806117ea57607f821691505b6020821081141561180b57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000835161188a818460208801611554565b83519083019061189e818360208801611554565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156118cf576118cf6118a7565b500390565b600082198211156118e7576118e76118a7565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415611952576119526118a7565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261197e5761197e611959565b500490565b60008261199257611992611959565b500690565b60006001600160a01b038087168352808616602084015250836040830152608060608301526119c96080830184611580565b9695505050505050565b6000602082840312156119e557600080fd5b81516109dd81611521565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220dc8a41deebd3064597f6e7d02e4aa4737fd02203cd572bc19e912a6067cd063164736f6c634300080a0033\";\n\ntype YourNFTConstructorParams =\n  | [signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: YourNFTConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;\n\nexport class YourNFT__factory extends ContractFactory {\n  constructor(...args: YourNFTConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      super(_abi, _bytecode, args[0]);\n    }\n    this.contractName = \"YourNFT\";\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<YourNFT> {\n    return super.deploy(overrides || {}) as Promise<YourNFT>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): YourNFT {\n    return super.attach(address) as YourNFT;\n  }\n  connect(signer: Signer): YourNFT__factory {\n    return super.connect(signer) as YourNFT__factory;\n  }\n  static readonly contractName: \"YourNFT\";\n  public readonly contractName: \"YourNFT\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): YourNFTInterface {\n    return new utils.Interface(_abi) as YourNFTInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): YourNFT {\n    return new Contract(address, _abi, signerOrProvider) as YourNFT;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { ZKVote, ZKVoteInterface } from \"../ZKVote\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_verifier\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"tokenAddress\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"clubId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"message\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"externalNullifier\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"CastVote\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"tokenAddress\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"clubId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"CreateClub\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"tokenAddress\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"clubId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"message\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"externalNullifier\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"CreateProposal\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"groupId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"depth\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"zeroValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"GroupCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"groupId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"identityCommitment\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"root\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MemberAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"groupId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"identityCommitment\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"root\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MemberRemoved\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"nullifierHash\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"NullifierHashAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"tokenAddress\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"identityCommitment\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Register\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"_signal\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_nullifierHash\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_root\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_externalNullifier\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_clubId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"enum ZKVote.MessageType\",\n        name: \"_messageType\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_flexField\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256[8]\",\n        name: \"_proof\",\n        type: \"uint256[8]\",\n      },\n    ],\n    name: \"broadcastMessage\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"clubCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"clubs\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"createClub\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"groupId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getDepth\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"groupId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getNumberOfLeaves\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"groupId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoot\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getRootForClub\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_identityCommitment\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"registerIdentity\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"registrations\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"verifier\",\n    outputs: [\n      {\n        internalType: \"contract IVerifier\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040526000600255600060055534801561001a57600080fd5b506040516112343803806112348339810160408190526100399161005e565b600680546001600160a01b0319166001600160a01b039290921691909117905561008e565b60006020828403121561007057600080fd5b81516001600160a01b038116811461008757600080fd5b9392505050565b6111978061009d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806348bd49461161007157806348bd49461461014857806375e618c9146101685780639b24b3b01461019d578063b1671482146101c1578063b206374f146101fa578063b9c78c2b1461020d57600080fd5b806309052679146100ae5780631e052c39146100ec57806329742bbc146101015780632b7ac3f31461011457806332f23c931461013f575b600080fd5b6100d96100bc366004610e52565b600360209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6100ff6100fa366004610e7e565b610230565b005b6100ff61010f366004610ea2565b6103e0565b600654610127906001600160a01b031681565b6040516001600160a01b0390911681526020016100e3565b6100d960055481565b6100d9610156366004610e7e565b60046020526000908152604090205481565b61018b610176366004610f31565b60009081526001602052604090205460ff1690565b60405160ff90911681526020016100e3565b6100d96101ab366004610f31565b6000908152600160208190526040909120015490565b6100d96101cf366004610e7e565b6001600160a01b03166000908152600460209081526040808320548352600191829052909120015490565b6100ff610208366004610f4a565b610609565b6100d961021b366004610f31565b60009081526001602052604090206002015490565b6001600160a01b038116600090815260046020526040902054156102915760405162461bcd60e51b81526020600482015260136024820152725a4b566f74653a20436c75622065786973747360681b60448201526064015b60405180910390fd5b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156102dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103009190610f7f565b61034c5760405162461bcd60e51b815260206004820152601760248201527f5a4b566f74653a20696e76616c696420616464726573730000000000000000006044820152606401610288565b6000600554600161035d9190610fb7565b905061036c8160146000610841565b6001600160a01b0382166000908152600460205260408120829055600580549161039583610fcf565b9091555050604080516001600160a01b0384168152602081018390527f7e67cd70732eaf54fde1880ef8a089d7a4658b3caa2e438b4cb7e580d8259b77910160405180910390a15050565b600060088585856040516020016103f993929190611000565b60405160208183030381529060405280519060200120901c60001c905080861461045d5760405162461bcd60e51b81526020600482015260156024820152742d25ab37ba329d103130b210373ab63634b334b2b960591b6044820152606401610288565b600084600181111561047157610471610fea565b14156104855761048083610a0a565b6104a8565b600184600181111561049957610499610fea565b14156104a8576104a88a610a67565b6006546104c7908b9089908b908a9087906001600160a01b0316610ad6565b6104e6886000908152602081905260409020805460ff19166001179055565b60008460018111156104fa576104fa610fea565b141561057c576001600260008282546105139190610fb7565b90915550506001600160a01b038916600081815260046020908152604091829020546002548351948552918401528282018d90526060830152517f0428f09e8a01b80f7487413cc75d827947bfb80919a2c5e06c07a1b4abf8b2f49181900360800190a16105fd565b600184600181111561059057610590610fea565b14156105fd576001600160a01b0389166000818152600460209081526040918290205482519384529083015281018b905260608101849052608081018790527f95791dffd5f04709f1bf4a731e0b1ea5b6d00f3649a097bdc4797942578915f99060a00160405180910390a15b50505050505050505050565b828261062c826001600160a01b0316600090815260046020526040902054151590565b6106785760405162461bcd60e51b815260206004820152601660248201527f5a4b566f74653a20546f6b656e206e6f7420696e6974000000000000000000006044820152606401610288565b6001600160a01b0382166000908152600360209081526040808320848452909152902054156106e95760405162461bcd60e51b815260206004820152601a60248201527f5a4b566f74653a20416c726561647920726567697374657265640000000000006044820152606401610288565b6040516331a9108f60e11b8152600481018590526001600160a01b03861690636352211e90602401602060405180830381865afa15801561072e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610752919061103c565b6001600160a01b0316336001600160a01b0316146107b25760405162461bcd60e51b815260206004820152601760248201527f5a4b566f74653a206e6f7420746f6b656e206f776e65720000000000000000006044820152606401610288565b6001600160a01b038516600081815260036020908152604080832088845282528083208790559282526004905220546107eb9084610cd4565b604080516001600160a01b03871681526020810186905233818301526060810185905290517feaacb3052183694021be29c1d3d258f66bc393226bbcb0c87236c99ae7ea257b9181900360800190a15050505050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183106108d65760405162461bcd60e51b815260206004820152603660248201527f53656d6170686f726547726f7570733a2067726f7570206964206d757374206260448201527f65203c20534e41524b5f5343414c41525f4649454c44000000000000000000006064820152608401610288565b60008381526001602052604090205460ff16156109435760405162461bcd60e51b815260206004820152602560248201527f53656d6170686f726547726f7570733a2067726f757020616c72656164792065604482015264786973747360d81b6064820152608401610288565b60008381526001602052604090819020905163b4bdd11760e01b8152600481019190915260ff831660248201526044810182905273__$4c0484323457fe1a856f46a4759b553fe4$__9063b4bdd1179060640160006040518083038186803b1580156109ae57600080fd5b505af41580156109c2573d6000803e3d6000fd5b50506040805160ff86168152602081018590528693507fc3082aa494e9088c2c9f0fb62a0b6bd46e6699acb94cfba35be29b95a93f68c89250015b60405180910390a2505050565b610a166103e843611059565b8114610a645760405162461bcd60e51b815260206004820152601660248201527f5a4b566f74653a204f7574736964652077696e646f77000000000000000000006044820152606401610288565b50565b6259455360e81b811480610a7f5750614e4f60f01b81145b80610a9357506620a129aa20a4a760c91b81145b610a645760405162461bcd60e51b81526020600482015260146024820152735a4b566f74653a20496e76616c696420766f746560601b6044820152606401610288565b60008481526020819052604090205460ff1615610b5b5760405162461bcd60e51b815260206004820152603660248201527f53656d6170686f7265436f72653a20796f752063616e6e6f742075736520746860448201527f652073616d65206e756c6c6966696572207477696365000000000000000000006064820152608401610288565b6000610b6687610e06565b9050816001600160a01b0316635fe8c13b604051806040016040528086600060088110610b9557610b9561107b565b6020020135815260200186600160088110610bb257610bb261107b565b6020020135905260408051608081018252878201359181019182529081906060820189600360200201358152508152602001604051806040016040528089600460088110610c0257610c0261107b565b6020020135815260200189600560088110610c1f57610c1f61107b565b60200201359052905260408051808201909152808860066020020135815260200188600760088110610c5357610c5361107b565b602002013581525060405180608001604052808c81526020018b81526020018781526020018a8152506040518563ffffffff1660e01b8152600401610c9b94939291906110ba565b60006040518083038186803b158015610cb357600080fd5b505afa158015610cc7573d6000803e3d6000fd5b5050505050505050505050565b60008281526001602052604090205460ff16610d405760405162461bcd60e51b815260206004820152602560248201527f53656d6170686f726547726f7570733a2067726f757020646f6573206e6f7420604482015264195e1a5cdd60da1b6064820152608401610288565b600082815260016020526040908190209051630b4381fd60e11b815260048101919091526024810182905273__$4c0484323457fe1a856f46a4759b553fe4$__9063168703fa9060440160006040518083038186803b158015610da257600080fd5b505af4158015610db6573d6000803e3d6000fd5b505050600083815260016020818152604092839020909101548251858152918201819052925084917f03fd27265b7dd1f55558bedc22a58fa3b10afb1be776e614bd5a7ba7b949940691016109fd565b6000600882604051602001610e1d91815260200190565b60408051601f198184030181529190528051602090910120901c92915050565b6001600160a01b0381168114610a6457600080fd5b60008060408385031215610e6557600080fd5b8235610e7081610e3d565b946020939093013593505050565b600060208284031215610e9057600080fd5b8135610e9b81610e3d565b9392505050565b6000806000806000806000806000610200808b8d031215610ec257600080fd5b8a35995060208b0135610ed481610e3d565b985060408b0135975060608b0135965060808b0135955060a08b0135945060c08b013560028110610f0457600080fd5b935060e08b01359250808b018c1015610f1c57600080fd5b506101008a0190509295985092959850929598565b600060208284031215610f4357600080fd5b5035919050565b600080600060608486031215610f5f57600080fd5b8335610f6a81610e3d565b95602085013595506040909401359392505050565b600060208284031215610f9157600080fd5b81518015158114610e9b57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610fca57610fca610fa1565b500190565b6000600019821415610fe357610fe3610fa1565b5060010190565b634e487b7160e01b600052602160045260246000fd5b83815260006002841061102357634e487b7160e01b600052602160045260246000fd5b5060f89290921b60208301526021820152604101919050565b60006020828403121561104e57600080fd5b8151610e9b81610e3d565b60008261107657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b8060005b60028110156110b4578151845260209384019390910190600101611095565b50505050565b61018081016110c98287611091565b60408083018660005b60028082106110e1575061111c565b82518460005b838110156111055782518252602092830192909101906001016110e7565b5050509284019250602091909101906001016110d2565b5050505061112d60c0830185611091565b61010082018360005b6004811015611155578151835260209283019290910190600101611136565b5050509594505050505056fea264697066735822122057159a28604c59c7837b167b85eb2df7fde8eb8c7e2080010665fae3d1d4f05c64736f6c634300080a0033\";\n\ntype ZKVoteConstructorParams =\n  | [linkLibraryAddresses: ZKVoteLibraryAddresses, signer?: Signer]\n  | ConstructorParameters<typeof ContractFactory>;\n\nconst isSuperArgs = (\n  xs: ZKVoteConstructorParams\n): xs is ConstructorParameters<typeof ContractFactory> => {\n  return (\n    typeof xs[0] === \"string\" ||\n    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||\n    \"_isInterface\" in xs[0]\n  );\n};\n\nexport class ZKVote__factory extends ContractFactory {\n  constructor(...args: ZKVoteConstructorParams) {\n    if (isSuperArgs(args)) {\n      super(...args);\n    } else {\n      const [linkLibraryAddresses, signer] = args;\n      super(_abi, ZKVote__factory.linkBytecode(linkLibraryAddresses), signer);\n    }\n    this.contractName = \"ZKVote\";\n  }\n\n  static linkBytecode(linkLibraryAddresses: ZKVoteLibraryAddresses): string {\n    let linkedBytecode = _bytecode;\n\n    linkedBytecode = linkedBytecode.replace(\n      new RegExp(\"__\\\\$4c0484323457fe1a856f46a4759b553fe4\\\\$__\", \"g\"),\n      linkLibraryAddresses[\n        \"@zk-kit/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol:IncrementalBinaryTree\"\n      ]\n        .replace(/^0x/, \"\")\n        .toLowerCase()\n    );\n\n    return linkedBytecode;\n  }\n\n  deploy(\n    _verifier: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ZKVote> {\n    return super.deploy(_verifier, overrides || {}) as Promise<ZKVote>;\n  }\n  getDeployTransaction(\n    _verifier: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_verifier, overrides || {});\n  }\n  attach(address: string): ZKVote {\n    return super.attach(address) as ZKVote;\n  }\n  connect(signer: Signer): ZKVote__factory {\n    return super.connect(signer) as ZKVote__factory;\n  }\n  static readonly contractName: \"ZKVote\";\n  public readonly contractName: \"ZKVote\";\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ZKVoteInterface {\n    return new utils.Interface(_abi) as ZKVoteInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): ZKVote {\n    return new Contract(address, _abi, signerOrProvider) as ZKVote;\n  }\n}\n\nexport interface ZKVoteLibraryAddresses {\n  [\"@zk-kit/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol:IncrementalBinaryTree\"]: string;\n}\n","import { EventFilter, BaseContract, Event } from \"ethers\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport {\n  TEthersProvider,\n  TEthersProviderOrSigner,\n} from \"../models/providerTypes\";\n\nconst queryKey = {\n  namespace: \"contracts\",\n  key: \"useEventListener\",\n} as const;\nexport const providerKey = (\n  providerOrSigner: TEthersProviderOrSigner | undefined\n): Record<\"provider\" | \"signer\", string> => {\n  if (providerOrSigner == null)\n    return { provider: \"undefined provider\", signer: \"undefined signer\" };\n\n  if (providerOrSigner instanceof Provider) {\n    return {\n      provider: `${providerOrSigner?.network?.chainId}_${\n        providerOrSigner?.network?.name\n      }_${providerOrSigner?.connection.url.substring(0, 25)}`,\n      signer: \"isProvider\",\n    };\n  } else {\n    const provider = providerOrSigner.provider as TEthersProvider;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const signerStr: string = (providerOrSigner as any)?.address ?? \"\";\n    if (provider && provider?.network) {\n      return {\n        signer: `isSigner_${providerOrSigner._isSigner}_${signerStr}`,\n        provider: `${provider?.network?.chainId}_${\n          provider?.network?.name\n        }_${provider?.connection.url.substring(0, 25)}`,\n      };\n    }\n  }\n\n  return { provider: \"unknown provider\", signer: \"unknown signer\" };\n};\n\nconst contractKey = (\n  contract: BaseContract | undefined\n): Partial<Record<\"contract\" | \"provider\", string>> => {\n  if (contract == null) return { contract: \"undefined contract\" };\n\n  const address = contract.address;\n  const provider = providerKey(\n    contract.provider as TEthersProvider | undefined\n  );\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n  const signerStr: string = (contract.signer as any)?.address ?? \"\";\n  const fragments = contract.interface.fragments\n    .map((m) => m.name)\n    .reduce((oldValue, current) => {\n      let newValue = oldValue;\n      if (newValue == null) {\n        newValue = \"\";\n      }\n      newValue += `${current},`;\n      return newValue;\n    }, \"\");\n\n  return { contract: `${address}_${signerStr}_${fragments}`, ...provider };\n};\n\nexport const useEventListener = (\n  contract: BaseContract | undefined,\n  eventFilter: string | EventFilter | undefined,\n  startBlock: number,\n  toBlock: number | undefined = undefined\n) => {\n  const keys = [\n    {\n      ...queryKey,\n      ...contractKey(contract),\n    },\n    {\n      eventFilter,\n      startBlock,\n      toBlock,\n    },\n  ] as const;\n  const { data, refetch, status } = useQuery(\n    keys,\n    async (keys): Promise<Event[]> => {\n      const result = await contract?.queryFilter(\n        eventFilter as EventFilter,\n        startBlock,\n        toBlock\n      );\n      return result ?? [];\n    },\n    {}\n  );\n\n  // update the result when ethers calls the event listner\n  useEffect(() => {\n    if (eventFilter != null) {\n      const listener = (): void => {\n        void refetch();\n      };\n      try {\n        contract?.on(eventFilter, listener);\n        return (): void => {\n          contract?.off(eventFilter, listener);\n        };\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [contract, eventFilter, refetch]);\n\n  // const blockNumber = useBlockNumberContext();\n  // useEthersUpdater(refetch, blockNumber, options);\n\n  return [data ?? [], refetch, status];\n};\n","import { ProgressBar } from \"react-bootstrap\";\n\ninterface ResultsProps {\n  votesYes: number;\n  votesNo: number;\n  votesAbstain: number;\n}\nexport const Results = (props: ResultsProps) => {\n  const votesYes = props.votesYes;\n  const votesNo = props.votesNo;\n  const votesAbstain = props.votesAbstain;\n  const sum = votesAbstain + votesNo + votesYes;\n  return (\n    <>\n      For\n      <div style={{ float: \"right\" }}>{`${votesYes} votes For | ${(\n        (votesYes / sum) *\n        100\n      ).toFixed(2)}%`}</div>\n      <ProgressBar variant=\"success\" now={(votesYes / sum) * 100} />\n      Against\n      <div style={{ float: \"right\" }}>{`${votesNo} votes Against | ${(\n        (votesNo / sum) *\n        100\n      ).toFixed(2)}%`}</div>\n      <ProgressBar variant=\"danger\" now={(votesNo / sum) * 100} />\n      Abstain\n      <div style={{ float: \"right\" }}>{`${votesAbstain} votes Abstained | ${(\n        (votesAbstain / sum) *\n        100\n      ).toFixed(2)}%`}</div>\n      <ProgressBar variant=\"secondary\" now={(votesAbstain / sum) * 100} />\n    </>\n  );\n};\n","import { Event } from \"ethers\";\nimport { useState } from \"react\";\nimport { Card, ButtonGroup, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { useAccount, useContract, useProvider, useSigner } from \"wagmi\";\nimport { ZKVote, ZKVote__factory } from \"../../generated\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport { Proof } from \"../../zk/zkLib\";\n\ninterface VoterProps {\n  createVoteProof: any;\n  submitVoteProof: any;\n  groupId: string | undefined;\n}\nexport const Voter = (props: VoterProps) => {\n  const [proof, setProof] = useState<Proof>();\n  const provider = useProvider();\n  const account = useAccount();\n  const [generating, setGenerating] = useState<boolean>(false);\n  const [err, setErr] = useState(\"\");\n\n  const zkVoteContract: ZKVote = useContract({\n    addressOrName: \"0x40D06FB96d75f361A325db5fb90568eDAd82fC3C\",\n    contractInterface: ZKVote__factory.abi,\n    signerOrProvider: provider,\n  });\n\n  const [members]: any[] = useEventListener(zkVoteContract, \"Register\", 0);\n\n  const isMember: boolean =\n    members!.filter(\n      (member: Event) => member!.args![2] === account.data?.address\n    ).length > 0;\n\n  const signer = useSigner();\n  const handleGenerate = async (vote: string) => {\n    setGenerating(true);\n    setProof(undefined);\n    try {\n      setProof(await props.createVoteProof(vote));\n    } catch (e: any) {\n      console.error(e);\n      setErr(e.message.toString());\n    }\n    setGenerating(false);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      await props.submitVoteProof(proof);\n    } catch (err: any) {\n      setErr(err.message);\n    }\n    setProof(undefined);\n  };\n  return (\n    <>\n      <Card.Title>Cast Vote:</Card.Title>\n\n      {signer.data && isMember ? (\n        <ButtonGroup className=\"d-flex\">\n          <Button onClick={() => handleGenerate(\"YES\")} variant=\"success\">\n            Yes\n          </Button>\n          <Button onClick={() => handleGenerate(\"NO\")} variant=\"danger\">\n            No\n          </Button>\n          <Button onClick={() => handleGenerate(\"ABSTAIN\")} variant=\"secondary\">\n            Abstain\n          </Button>\n        </ButtonGroup>\n      ) : (\n        \"Must be registered to cast a vote\"\n      )}\n      {proof ? (\n        <>\n          <Card style={{ wordBreak: \"break-all\" }}>\n            <Card.Body>{proof.proof.toString()} </Card.Body>\n          </Card>\n          <Button onClick={handleSubmit}>Submit Proof</Button>\n        </>\n      ) : generating ? (\n        <Spinner animation={\"border\"} />\n      ) : err ? (\n        <Alert onClose={() => setErr(\"\")} variant=\"warning\" dismissible>\n          {\"ERROR: \" + err}\n        </Alert>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { ZkIdentity, Strategy } from \"@zk-kit/identity\";\nimport { StrBigInt } from \"@zk-kit/protocols\";\nimport { ethers, BigNumber } from \"ethers\";\nimport { Card } from \"react-bootstrap\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useParams } from \"react-router-dom\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { gruvboxDark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { useContract, useProvider, useSigner } from \"wagmi\";\nimport { ZKVote, ZKVote__factory } from \"../../generated\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport {\n  broadcastMessage,\n  createExternalNullifier,\n  getNullHashAndProofForMessage,\n  Proof,\n} from \"../../zk/zkLib\";\nimport { Results } from \"../VoteResults\";\nimport { Voter } from \"../VotingCard\";\ninterface ProposalProps {\n  message: string;\n  proposalId: BigNumber;\n}\nexport const Proposal = (props: ProposalProps) => {\n  const { groupId } = useParams();\n  const provider = useProvider();\n  const zkVoteContract: ZKVote = useContract({\n    addressOrName: \"0x40D06FB96d75f361A325db5fb90568eDAd82fC3C\",\n    contractInterface: ZKVote__factory.abi,\n    signerOrProvider: provider,\n  });\n  const signer = useSigner();\n  const [messagesBroadcasted]: any[] = useEventListener(\n    zkVoteContract,\n    \"CastVote\",\n    0\n  );\n  const [registrations]: any[] = useEventListener(\n    zkVoteContract,\n    \"Register\",\n    0\n  );\n  const allIdentityCommitments: StrBigInt[] = registrations.map(\n    (register: any) => register.args[3]\n  );\n  const votes = messagesBroadcasted\n    .filter((vote: any) => BigNumber.from(vote.args[3]).eq(props.proposalId))\n    .map((message: any) => ethers.utils.parseBytes32String(message.args[2]));\n\n  const createVoteProof = async (vote: string): Promise<Proof> => {\n    const clubId = await zkVoteContract!.clubs(groupId!);\n    const messageBytes = ethers.utils.formatBytes32String(vote);\n    const externalNullifier = createExternalNullifier(\n      clubId,\n      BigNumber.from(1),\n      props.proposalId\n    );\n    const message = await signer!.data!.signMessage(\n      \"Sign this message to create your identity!\"\n    );\n    const identity = new ZkIdentity(Strategy.MESSAGE, message);\n    const { nullifierHash, solidityProof, root } =\n      await getNullHashAndProofForMessage(\n        vote,\n        externalNullifier,\n        identity.genIdentityCommitment(),\n        allIdentityCommitments,\n        identity\n      );\n    return {\n      messageBytes,\n      token: groupId!,\n      nullifierHash,\n      root,\n      externalNullifier,\n      clubId,\n      messageType: BigNumber.from(1),\n      flexField: props.proposalId,\n      proof: solidityProof,\n    };\n  };\n  const broadcastProof = async (proof: Proof) => {\n    await broadcastMessage(zkVoteContract!.connect(signer.data!), proof);\n  };\n  return (\n    <div style={{ paddingTop: \"10px\" }}>\n      <Card>\n        <Card.Header>\n          <Card.Title>Proposal id: {props.proposalId.toString()}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <ReactMarkdown\n            components={{\n              code({ node, inline, className, children, ...props }) {\n                const match = /language-(\\w+)/.exec(className || \"\");\n                return !inline && match ? (\n                  <SyntaxHighlighter\n                    children={String(children).replace(/\\n$/, \"\")}\n                    //@ts-ignore\n                    style={gruvboxDark}\n                    language={match[1]}\n                    PreTag=\"div\"\n                    {...props}\n                  />\n                ) : (\n                  <code className={className} {...props}>\n                    {children}\n                  </code>\n                );\n              },\n            }}\n          >\n            {props.message}\n          </ReactMarkdown>\n        </Card.Body>\n\n        <Card.Footer>\n          <Voter\n            createVoteProof={createVoteProof}\n            submitVoteProof={broadcastProof}\n            groupId={groupId}\n          />\n          <hr />\n          <Card.Title>Results:</Card.Title>\n          <Results\n            votesYes={votes.filter((vote: string) => vote === \"YES\").length}\n            votesNo={votes.filter((vote: string) => vote === \"NO\").length}\n            votesAbstain={\n              votes.filter((vote: string) => vote === \"ABSTAIN\").length\n            }\n          />\n        </Card.Footer>\n      </Card>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { Button, Modal, Form, Container, Row, Col, Card, Spinner } from \"react-bootstrap\";\nimport { Proof } from \"../../zk/zkLib\";\n\ninterface CreateProposalModalProps {\n  createProposal: any;\n  submitProof: any;\n  isMember: boolean;\n  hasMinted: boolean;\n  register: any;\n  mint: any;\n  isConnected: boolean;\n  isExampleNFT: boolean;\n}\nexport const CreateProposalModal = (props: CreateProposalModalProps) => {\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const [proof, setProof] = useState<Proof>();\n  const [isGenerating, setGenerating] = useState<boolean>(false);\n\n  const handleClose = () => setShow(false);\n  const handleGenerate = async () => {\n    setGenerating(true);\n    try {\n      setProof(await props.createProposal(message));\n    } catch (e: any) {\n      console.error(e);\n      setErr(e.message.toString());\n    }\n    setGenerating(false);\n  };\n  const handleSubmit = async () => {\n    setShow(false);\n    await props.submitProof(proof);\n    setMessage(\"\");\n    setProof(undefined);\n  };\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      {props.isConnected ? (\n        props.isMember ? (\n          <Button variant=\"success\" onClick={handleShow}>\n            Create Proposal Proof\n          </Button>\n        ) : props.hasMinted ? (\n          <Button onClick={props.register}>Register Identity</Button>\n        ) : props.isExampleNFT ? (\n          <Button onClick={props.mint}>Mint a sample NFT</Button>\n        ) : (\n          \"Need to be and owner of this NFT\"\n        )\n      ) : (\n        \"Need to connect to wallet to interact\"\n      )}\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Create an anonymous proposal</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Proposal message (32 bytes max)</Form.Label>\n              <Form.Control\n                type=\"message\"\n                placeholder=\"...\"\n                autoFocus\n                as=\"textarea\"\n                value={message}\n                onChange={(val: any) => setMessage(val.target.value)}\n              />\n            </Form.Group>\n          </Form>\n          {proof ? (\n            <Container style={{ wordBreak: \"break-all\" }}>\n              <Modal.Dialog>\n                <Row>\n                  <Col>{proof.proof.toString()}</Col>\n                </Row>\n              </Modal.Dialog>\n              <Card>\n                <Card.Body>\n                  <Card.Text>\n                    Note that this proof can be submitted by any account. If it\n                    is submitted by the same account that created it, this does\n                    lose anonymity.\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n              <Button onClick={handleSubmit} style={{ float: \"right\" }}>\n                Submit Proof\n              </Button>\n            </Container>\n          ) : isGenerating ? (\n            <Spinner animation={\"border\"} />\n          ) : err ? (\n            \"ERROR: \" + err\n          ) : (\n            \"\"\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleGenerate}>\n            Create Proposal Proof\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n","import StepProgressBar from \"react-step-progress\";\nimport \"react-step-progress/dist/index.css\";\nimport classes from \"./RegistrationFlow.module.css\";\nimport { Container } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\n\ninterface RegistrationFlowProps {\n  groupId: string | undefined;\n  isMember: boolean;\n  hasMinted: boolean;\n  isConnected: boolean;\n}\nconst getState = (\n  ismember: boolean,\n  hasminted: boolean,\n  isconnected: boolean\n) => {\n  if (!isconnected) return 0;\n  if (!hasminted) return 1;\n  if (!ismember) return 2;\n  return 3;\n};\nconst useStep = (\n  isMember: boolean,\n  hasMinted: boolean,\n  isConnected: boolean\n) => {\n  const [step, setStep] = useState<number>(0);\n  useEffect(() => {\n    const state = getState(isMember, hasMinted, isConnected);\n    setStep(state);\n  }, [hasMinted, isMember, isConnected]);\n  return step;\n};\nexport const RegistrationFlow = (props: RegistrationFlowProps) => {\n  const step = useStep(props.isMember, props.hasMinted, props.isConnected);\n  return (\n    <Container fluid>\n      <StepProgressBar\n        key={step}\n        primaryBtnClass={classes.hide}\n        secondaryBtnClass={classes.hide}\n        startingStep={step}\n        onSubmit={() => {}}\n        steps={[\n          {\n            label: \"Connect Wallet\",\n            name: \"step 0\",\n            content: <></>,\n          },\n          {\n            label: \"Own this NFT\",\n            name: \"step 1\",\n            content: <></>,\n          },\n          {\n            label: \"Register Identity\",\n            name: \"step 2\",\n            content: <></>,\n          },\n          {\n            label: \"Create Proposals and Vote\",\n            name: \"step 3\",\n            content: <></>,\n          },\n        ]}\n      />\n    </Container>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { ERC721 } from \"../generated\";\n\nexport const useReadNFTData = (nftContract: ERC721) => {\n  const [name, setName] = useState(\"\");\n  const [symbol, setSymbol] = useState(\"\");\n\n  useEffect(() => {\n    const getSymbol = async () => {\n      const symbol = await nftContract.symbol();\n      setSymbol(symbol);\n    };\n    const getName = async () => {\n      const name = await nftContract.name();\n      setName(name);\n    };\n\n    getSymbol();\n    getName();\n  }, [nftContract]);\n\n  return { name, symbol };\n};\n","import { Suspense, useState } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Strategy, ZkIdentity } from \"@zk-kit/identity\";\nimport { BigNumber, ethers, Event } from \"ethers\";\nimport {\n  createExternalNullifier,\n  getNullHashAndProofForMessage,\n  broadcastMessage,\n  Proof,\n} from \"../../zk/zkLib\";\nimport { useAccount, useContract, useProvider, useSigner } from \"wagmi\";\n\nimport { Proposal } from \"../../components/Proposal\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport {\n  ZKVote,\n  ZKVote__factory,\n  YourNFT,\n  YourNFT__factory,\n  ERC721__factory,\n  ERC721,\n} from \"../../generated\";\nimport { CreateProposalModal } from \"../../components/CreateProposalModal\";\nimport { useReadBalance } from \"../../hooks/useReadNFTBalance\";\nimport { RegistrationFlow } from \"../../components/RegistrationFlow\";\nimport { useReadNFTData } from \"../../hooks/useReadNFTData\";\n\nexport const GroupPage = () => {\n  const { groupId } = useParams();\n  const [registerErr, setRegErr] = useState();\n  const navigate = useNavigate();\n  const provider = useProvider();\n  const signer = useSigner();\n  const account = useAccount();\n  const zkVoteContract: ZKVote = useContract({\n    addressOrName: \"0x40D06FB96d75f361A325db5fb90568eDAd82fC3C\",\n    contractInterface: ZKVote__factory.abi,\n    signerOrProvider: provider,\n  });\n\n  const nftContract: YourNFT = useContract({\n    addressOrName: \"0x4215edb99e120a0A35FECe311f72DA65D5D00941\",\n    contractInterface: YourNFT__factory.abi,\n    signerOrProvider: provider,\n  })!;\n\n  const dynamicContract: ERC721 = useContract({\n    addressOrName: groupId!,\n    contractInterface: ERC721__factory.abi,\n    signerOrProvider: provider,\n  })!;\n  const balanceOfUser = useReadBalance(account.data?.address, dynamicContract);\n\n  const [messagesBroadcasted]: any[] = useEventListener(\n    zkVoteContract,\n    \"CreateProposal\",\n    0\n  )!;\n\n  const proposalsForGroup: any[] = messagesBroadcasted!.filter(\n    (message: Event) => message!.args![0] === groupId\n  )!;\n  const [members]: any[] = useEventListener(zkVoteContract, \"Register\", 0);\n  const identityCommitmentsOnChain: any[] = members!.map(\n    (member: Event) => member!.args![3]\n  );\n  const hasMinted: boolean = BigNumber.from(balanceOfUser).gt(\n    BigNumber.from(0)\n  );\n  const isMember: boolean =\n    members!.filter(\n      (member: Event) =>\n        member!.args![2] === account.data?.address &&\n        member!.args![0] === groupId\n    ).length > 0;\n\n  const createProposalProof = async (\n    proposalMessage: string\n  ): Promise<Proof> => {\n    const clubId = await zkVoteContract.clubs(groupId!);\n    const messageBytes = ethers.utils.formatBytes32String(proposalMessage);\n    const window = BigNumber.from(\n      Math.round((await signer!.data!.provider?.getBlockNumber())!)\n    ).div(1000);\n    const externalNullifier = createExternalNullifier(\n      clubId,\n      BigNumber.from(0),\n      window\n    );\n\n    const message = await signer!.data!.signMessage(\n      \"Sign this message to create your identity!\"\n    );\n    const identity = new ZkIdentity(Strategy.MESSAGE, message);\n\n    const { nullifierHash, solidityProof, root } =\n      await getNullHashAndProofForMessage(\n        proposalMessage,\n        externalNullifier,\n        identity.genIdentityCommitment(),\n        identityCommitmentsOnChain,\n        identity\n      );\n\n    return {\n      messageBytes: messageBytes,\n      token: groupId!,\n      nullifierHash: nullifierHash,\n      root: root,\n      externalNullifier: externalNullifier,\n      clubId: clubId,\n      messageType: BigNumber.from(0),\n      flexField: window,\n      proof: solidityProof,\n    };\n  };\n  const broadcastProof = async (proof: Proof) => {\n    await broadcastMessage(zkVoteContract.connect(signer.data!), proof);\n  };\n  const mint = async () => {\n    await nftContract.connect(signer.data!).mintItem(account.data?.address!);\n  };\n  const registerId = async () => {\n    setRegErr(undefined);\n    const message = await signer!.data!.signMessage(\n      \"Sign this message to create your identity!\"\n    );\n    const identity = new ZkIdentity(Strategy.MESSAGE, message);\n    const identityCommitment = identity.genIdentityCommitment();\n    const addy = account.data?.address;\n\n    try {\n      const tokenId = await nftContract.tokenOfOwnerByIndex(addy!, 0);\n      await zkVoteContract\n        .connect(signer.data!)\n        .registerIdentity(groupId!, tokenId, identityCommitment);\n      // pass to notify\n    } catch (err: any) {\n      console.error(err);\n      setRegErr(err.data.message);\n    }\n  };\n  const { name, symbol } = useReadNFTData(dynamicContract);\n  return (\n    <Suspense fallback={<>error</>}>\n      <Container>\n        <Button variant=\"\" onClick={() => navigate(\"/\")}>\n          {\"Back\"}\n        </Button>\n        <h3>\n          Proposals for group:{\" \"}\n          {name && symbol ? name + \" - $\" + symbol : groupId}\n        </h3>\n        <RegistrationFlow\n          groupId={groupId}\n          hasMinted={hasMinted}\n          isMember={isMember}\n          isConnected={!!account.data?.address}\n        />\n        <CreateProposalModal\n          createProposal={createProposalProof}\n          submitProof={broadcastProof}\n          isMember={isMember}\n          hasMinted={hasMinted}\n          register={registerId}\n          mint={mint}\n          isConnected={signer.data != null}\n          isExampleNFT={groupId === nftContract.address}\n        />\n        {registerErr ?? \"\"}\n\n        {proposalsForGroup.map((message, i) => (\n          <Proposal\n            key={i}\n            message={ethers.utils.parseBytes32String(message.args[2])}\n            proposalId={message.args[3]}\n          />\n        ))}\n      </Container>\n    </Suspense>\n  );\n};\n","import { BigNumber } from \"ethers\";\nimport { useState, useEffect } from \"react\";\nimport { ERC721 } from \"../generated\";\n\nexport const useReadBalance = (\n  address: string | undefined,\n  contract: ERC721 | undefined\n) => {\n  const [balance, setBalance] = useState<BigNumber>(BigNumber.from(0));\n  useEffect(() => {\n    const getBalance = async (address: string | undefined) => {\n      if (!address || !contract) return setBalance(BigNumber.from(0));\n      const result = await contract.balanceOf(address);\n      return setBalance(result);\n    };\n    const listenForUpdates = (address: string | undefined) => {\n      const listener = (): void => {\n        void getBalance(address);\n      };\n      try {\n        contract?.provider.on(\"block\", listener);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getBalance(address);\n    listenForUpdates(address);\n  }, [address, contract]);\n  return balance;\n};\n","import { useState } from \"react\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\n\n\ninterface RegisterModalProps {\n  createGroup: any;\n  signedIn: boolean;\n}\nexport const RegisterModal = (props: RegisterModalProps) => {\n  const [show, setShow] = useState(false);\n  const [address, setAddress] = useState(\"\");\n\n  const handleClose = () => setShow(false);\n  const handleSubmit = async () => {\n    setShow(false);\n    await props.createGroup(address);\n  };\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      {props.signedIn ? (\n        <Button\n          variant=\"success\"\n          onClick={handleShow}\n          style={{ float: \"right\" }}\n        >\n          Register Group\n        </Button>\n      ) : (\n        \"\"\n      )}\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Register a NFT Project for a anonymous group\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Contract address</Form.Label>\n              <Form.Control\n                type=\"address\"\n                placeholder=\"0xdeadbeef...\"\n                autoFocus\n                value={address}\n                onChange={(val: any) => setAddress(val.target.value)}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSubmit}>\n            Create group\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};","import { Event } from \"ethers\";\nimport {\n  Badge,\n  Card,\n  Col,\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContract, useProvider, useSigner } from \"wagmi\";\nimport { RegisterModal } from \"../../components/RegisterGroupModal\";\nimport { ERC721__factory, ZKVote__factory } from \"../../generated\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport { useReadNFTData } from \"../../hooks/useReadNFTData\";\n\nexport const HomePage = () => {\n  const provider = useProvider();\n  const signer = useSigner();\n  const contract = useContract({\n    addressOrName: \"0x40D06FB96d75f361A325db5fb90568eDAd82fC3C\",\n    contractInterface: ZKVote__factory.abi,\n    signerOrProvider: provider,\n  });\n  const [clubs]: any[] = useEventListener(contract, \"CreateClub\", 0)!;\n\n  const createClub = async (token: string) => {\n    if (signer.data) {\n      await contract.connect(signer.data!).createClub(token);\n    } else {\n      alert(\"Must be logged in\");\n    }\n  };\n  return (\n    <Container>\n      <p>\n        How does this work? honestly, man, you are on your own here, if this\n        UI/UX isn't clear as day then ur ngmi\n      </p>\n      <Card>\n        <Card.Header>\n          <Row>\n            <Col>\n              <Card.Title>Private NFT Groups</Card.Title>\n            </Col>\n            <Col>\n              <RegisterModal createGroup={createClub} signedIn={!!signer} />\n            </Col>\n          </Row>\n        </Card.Header>\n        <Card.Body>\n          <ListGroup>\n            {clubs!.map((creationTx: Event, i: number) => {\n              return <GroupCard key={i} groupId={creationTx!.args![0]} />;\n            })}\n          </ListGroup>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\ninterface GroupCardProps {\n  groupId: string;\n}\n\nconst GroupCard = (props: GroupCardProps) => {\n  const navigate = useNavigate();\n  const provider = useProvider();\n  const contract = useContract({\n    addressOrName: props.groupId,\n    contractInterface: ERC721__factory.abi,\n    signerOrProvider: provider,\n  });\n  const { name, symbol } = useReadNFTData(contract);\n  return (\n    <ListGroupItem action onClick={() => navigate(\"/group/\" + props.groupId)}>\n      {name && symbol\n        ? name + \" - $\" + symbol\n        : \"Group Contract Address: \" + props.groupId}\n      {props.groupId === \"0x4215edb99e120a0A35FECe311f72DA65D5D00941\" ? (\n        <Badge style={{ float: \"right\" }}>This is the demo NFT</Badge>\n      ) : (\n        \"\"\n      )}\n    </ListGroupItem>\n  );\n};\n","import { NavBar } from \"./components/NavBar\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { GroupPage } from \"./pages/GroupPage\";\nimport { HomePage } from \"./pages/HomePage\";\nimport { Provider, createClient } from \"wagmi\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { providers } from \"ethers\";\nimport { Suspense } from \"react\";\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nimport { MetaMaskConnector } from \"wagmi/connectors/metaMask\";\n\nconst queryClient = new QueryClient();\nconst client = createClient({\n  autoConnect: true,\n  connectors: [\n    new InjectedConnector(),\n    new MetaMaskConnector({\n      options: {\n        shimDisconnect: true,\n      },\n    }),\n  ],\n  provider(config) {\n    return new providers.StaticJsonRpcProvider(\n      \"https://eth-rinkeby.alchemyapi.io/v2/\" +\n        \"6X8nst5K9gW4Gz4kE4Wmj0eRXFo8ORFS\"\n    );\n  },\n});\n\nfunction App() {\n  return (\n    <Provider client={client}>\n      <QueryClientProvider client={queryClient}>\n        <Suspense fallback={<>Loading...</>}>\n          <NavBar />\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/group/:groupId\" element={<GroupPage />} />\n          </Routes>\n        </Suspense>\n      </QueryClientProvider>\n    </Provider>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./custom.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/zk-vote\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\") as HTMLElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}